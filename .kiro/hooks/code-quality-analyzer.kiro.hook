{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.js",
      "*.ts",
      "*.js"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the recently modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells such as long methods, large classes, duplicate code, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to TypeScript/JavaScript best practices including:\n   - Proper typing and type safety\n   - Function and variable naming conventions\n   - Code organization and modularity\n   - Error handling\n4. **Performance**: Identify potential performance optimizations\n5. **Readability & Maintainability**: Suggest improvements for code clarity and long-term maintenance\n\nFor each suggestion, provide:\n- The specific issue or improvement opportunity\n- Why it matters (impact on code quality)\n- A concrete example or recommendation for how to fix it\n- Priority level (High/Medium/Low)\n\nMaintain focus on preserving existing functionality while improving code quality."
  }
}